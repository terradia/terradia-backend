# It's a minimal nginx configuration provided to simplify example.
# Don't use directly in production.

user nginx nginx;

events {
}

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile      on;

  keepalive_timeout 300s;

  # HTTPS
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 24h;
  ssl_session_tickets off;
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1.2;
  ssl_ciphers EECDH+CHACHA20:EECDH+AES;
  ssl_ecdh_curve X25519:prime256v1:secp521r1:secp384r1;

  ssl_certificate /etc/letsencrypt/live/api.terradia.eu/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/api.terradia.eu/privkey.pem;

  # Redirect www to HTTPS non-www
  server {
    listen 80;
    listen 443 ssl http2;

    server_name www.api.terradia.eu;

    return 301 https://api.terradia.eu$request_uri;
  }

  # Redirect HTTP non-www to HTTPS non-www
  server {
    listen 80;

    server_name api.terradia.eu;

    return 301 https://api.terradia.eu$request_uri;
  }

  # Main domain
  server {
    listen 443 ssl http2 default_server;

    server_name api.terradia.eu;

    location / {
      proxy_pass http://api:8000/;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;

      proxy_redirect off;
    }

    # Certbot
    location /.well-known/ {
      root /var/lib/certbot;
    }
  }
}